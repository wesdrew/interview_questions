import logging
import threading

class Bathroom:
    """
    Singleton bathroom shared between all threads waiting to use the bathroom

    """
    
    class __Bathroom:
        def __init__(self):
            self.lock = threading.Lock()
            self.count = 0


    instance = None
    def __init__(self):
        if Bathroom.instance == None:
            Bathroom.instance = Bathroom. __Bathroom()

    def get_lock(self):
        return self.instance.lock

    def inc(self):
        self.instance.count += 1
        logging.debug("current count: %d", self.instance.count)

    def dec(self):
        self.instance.count -= 1
        logging.debug("current count: %d", self.instance.count)

    def get_count(self):
        return self.instance.count


if __name__ == '__main__':
    b = Bathroom()
    b2 = Bathroom()
    print(b.instance == b2.instance)
    print(b.get_lock())
