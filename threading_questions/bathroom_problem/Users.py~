import threading
import logging

logging.basicConfig(level=logging.DEBUG,
                    format='%(threadName)-10s %(message)s')


class Male(threading.Thread):

    def __init__(self, cv, bathroom_empty_cv, bathroom):
        self.cv = cv
        self.bathroom_empty = bathroom_empty_cv
        self.bathroom = bathroom
        threading.Thread.__init__(self, args = cv)

    def male_enter_bathroom(self):
        self.cv.acquire()
        self.cv.wait()
        logging.debug("male entering bathroom")
        self.bathroom.inc()          # another person in bathroom
        logging.debug("male alerting all males")
        self.cv.notify_all()

    def male_leave_bathroom(self):
        logging.debug("male leaving bathroom -- releasing lock")
        self.bathroom.dec()          # if bathroom count is 0, notify both sexes
        if self.bathroom.get_count() == 0:
            logging.debug("bathroom empty!")
            self.bathroom_empty_cv.notify_all()
        self.cv.release()

    def run(self):
        logging.debug("male running!")
        self.male_enter_bathroom()
        self.male_leave_bathroom()


class Female(threading.Thread):

    def __init__(self, cv, bathroom_empty_cv, bathroom):
        self.cv = cv
        self.bathroom_empty = bathroom_empty_cv
        self.bathroom = bathroom
        threading.Thread.__init__(self, args = cv)

    def run(self):
        logging.debug("female running!")
        self.female_enter_bathroom()
        self.female_leave_bathroom()

    def female_enter_bathroom(self):
        logging.debug("female entering bathroom!")
        self.cv.acquire()
        logging.debug("CCCCCC")
        self.bathroom.inc()
        logging.debug("female notifying all females")
        self.cv.notify_all()

    def female_leave_bathroom(self):
        logging.debug("female leaving bathroom -- releasing lock")
        self.bathroom.dec()
        if self.bathroom.get_count == 0:
            logging.debug("bathroom empty!")
            self.bathroom_empty_cv.notify_all()
        self.cv.release()


